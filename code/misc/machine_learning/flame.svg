<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>MainThread`__init__ (920 samples, 1.50%)</title><rect x="432.8" y="357" width="17.7" height="15.0" fill="rgb(211,118,7)" rx="2" ry="2" />
<text  x="435.83" y="367.5" ></text>
</g>
<g >
<title>MainThread`&lt;module&gt; (12,258 samples, 19.92%)</title><rect x="432.3" y="421" width="235.1" height="15.0" fill="rgb(240,64,53)" rx="2" ry="2" />
<text  x="435.31" y="431.5" >MainThread`&lt;module&gt;</text>
</g>
<g >
<title>MainThread`feed_forward_layers (619 samples, 1.01%)</title><rect x="640.3" y="309" width="11.9" height="15.0" fill="rgb(215,141,29)" rx="2" ry="2" />
<text  x="643.32" y="319.5" ></text>
</g>
<g >
<title>MainThread`exec_module (24 samples, 0.04%)</title><rect x="432.3" y="197" width="0.5" height="15.0" fill="rgb(241,65,37)" rx="2" ry="2" />
<text  x="435.31" y="207.5" ></text>
</g>
<g >
<title>MainThread`_reproduce (221 samples, 0.36%)</title><rect x="654.8" y="341" width="4.2" height="15.0" fill="rgb(217,14,30)" rx="2" ry="2" />
<text  x="657.78" y="351.5" ></text>
</g>
<g >
<title>FlameGraph Thread`wait (5,009 samples, 8.14%)</title><rect x="255.2" y="389" width="96.1" height="15.0" fill="rgb(229,165,27)" rx="2" ry="2" />
<text  x="258.20" y="399.5" >FlameGraph ..</text>
</g>
<g >
<title>MainThread`mutate (15 samples, 0.02%)</title><rect x="658.7" y="325" width="0.3" height="15.0" fill="rgb(224,153,13)" rx="2" ry="2" />
<text  x="661.73" y="335.5" ></text>
</g>
<g >
<title>MainThread`find_required_nodes (301 samples, 0.49%)</title><rect x="646.4" y="293" width="5.8" height="15.0" fill="rgb(207,112,21)" rx="2" ry="2" />
<text  x="649.42" y="303.5" ></text>
</g>
<g >
<title>all (61,522 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(241,71,15)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>MainThread`_call_with_frames_removed (7 samples, 0.01%)</title><rect x="432.4" y="85" width="0.1" height="15.0" fill="rgb(228,23,26)" rx="2" ry="2" />
<text  x="435.37" y="95.5" ></text>
</g>
<g >
<title>MainThread`value (355 samples, 0.58%)</title><rect x="659.1" y="309" width="6.8" height="15.0" fill="rgb(216,208,40)" rx="2" ry="2" />
<text  x="662.06" y="319.5" ></text>
</g>
<g >
<title>MainThread`exec_module (27 samples, 0.04%)</title><rect x="432.3" y="325" width="0.5" height="15.0" fill="rgb(232,161,9)" rx="2" ry="2" />
<text  x="435.31" y="335.5" ></text>
</g>
<g >
<title>MainThread`value (79 samples, 0.13%)</title><rect x="665.9" y="325" width="1.5" height="15.0" fill="rgb(207,132,21)" rx="2" ry="2" />
<text  x="668.86" y="335.5" ></text>
</g>
<g >
<title>MainThread`__eq__ (130 samples, 0.21%)</title><rect x="647.9" y="277" width="2.5" height="15.0" fill="rgb(224,139,40)" rx="2" ry="2" />
<text  x="650.87" y="287.5" ></text>
</g>
<g >
<title>MainThread`copy (146 samples, 0.24%)</title><rect x="655.9" y="309" width="2.8" height="15.0" fill="rgb(240,49,28)" rx="2" ry="2" />
<text  x="658.93" y="319.5" ></text>
</g>
<g >
<title>MainThread`&lt;module&gt; (27 samples, 0.04%)</title><rect x="432.3" y="293" width="0.5" height="15.0" fill="rgb(242,91,4)" rx="2" ry="2" />
<text  x="435.31" y="303.5" ></text>
</g>
<g >
<title>FlameGraph Thread`wait (5,009 samples, 8.14%)</title><rect x="255.2" y="405" width="96.1" height="15.0" fill="rgb(251,9,29)" rx="2" ry="2" />
<text  x="258.20" y="415.5" >FlameGraph ..</text>
</g>
<g >
<title>MainThread`aggregate (22 samples, 0.04%)</title><rect x="654.3" y="309" width="0.4" height="15.0" fill="rgb(234,47,47)" rx="2" ry="2" />
<text  x="657.28" y="319.5" ></text>
</g>
<g >
<title>MainThread`next_id (96 samples, 0.16%)</title><rect x="448.3" y="277" width="1.9" height="15.0" fill="rgb(210,145,17)" rx="2" ry="2" />
<text  x="451.34" y="287.5" ></text>
</g>
<g >
<title>MainThread`aggregate (23 samples, 0.04%)</title><rect x="654.3" y="325" width="0.4" height="15.0" fill="rgb(224,175,7)" rx="2" ry="2" />
<text  x="657.26" y="335.5" ></text>
</g>
<g >
<title>MainThread`__hash__ (167 samples, 0.27%)</title><rect x="643.2" y="293" width="3.2" height="15.0" fill="rgb(228,55,1)" rx="2" ry="2" />
<text  x="646.21" y="303.5" ></text>
</g>
<g >
<title>FlameGraph Thread`_bootstrap_inner (14,067 samples, 22.86%)</title><rect x="81.5" y="437" width="269.8" height="15.0" fill="rgb(222,36,30)" rx="2" ry="2" />
<text  x="84.47" y="447.5" >FlameGraph Thread`_bootstrap_inner</text>
</g>
<g >
<title>MainThread`_find_and_load (27 samples, 0.04%)</title><rect x="432.3" y="373" width="0.5" height="15.0" fill="rgb(253,56,27)" rx="2" ry="2" />
<text  x="435.31" y="383.5" ></text>
</g>
<g >
<title>MainThread`_handle_fromlist (9 samples, 0.01%)</title><rect x="432.6" y="149" width="0.1" height="15.0" fill="rgb(233,19,48)" rx="2" ry="2" />
<text  x="435.58" y="159.5" ></text>
</g>
<g >
<title>MainThread`evaluate (10,650 samples, 17.31%)</title><rect x="450.5" y="357" width="204.3" height="15.0" fill="rgb(218,37,46)" rx="2" ry="2" />
<text  x="453.51" y="367.5" >MainThread`evaluate</text>
</g>
<g >
<title>MainThread`compute (131 samples, 0.21%)</title><rect x="652.2" y="341" width="2.5" height="15.0" fill="rgb(254,194,33)" rx="2" ry="2" />
<text  x="655.19" y="351.5" ></text>
</g>
<g >
<title>MainThread`main (12,258 samples, 19.92%)</title><rect x="432.3" y="405" width="235.1" height="15.0" fill="rgb(225,5,31)" rx="2" ry="2" />
<text  x="435.31" y="415.5" >MainThread`main</text>
</g>
<g >
<title>MainThread`add_node (15 samples, 0.02%)</title><rect x="450.2" y="325" width="0.3" height="15.0" fill="rgb(214,208,6)" rx="2" ry="2" />
<text  x="453.18" y="335.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load (6 samples, 0.01%)</title><rect x="432.4" y="53" width="0.1" height="15.0" fill="rgb(244,174,26)" rx="2" ry="2" />
<text  x="435.38" y="63.5" ></text>
</g>
<g >
<title>MainThread`__hash__ (58 samples, 0.09%)</title><rect x="431.2" y="437" width="1.1" height="15.0" fill="rgb(252,179,24)" rx="2" ry="2" />
<text  x="434.20" y="447.5" ></text>
</g>
<g >
<title>MainThread`value (271 samples, 0.44%)</title><rect x="660.7" y="293" width="5.2" height="15.0" fill="rgb(245,84,10)" rx="2" ry="2" />
<text  x="663.67" y="303.5" ></text>
</g>
<g >
<title>Thread-1`wait (27,245 samples, 44.28%)</title><rect x="667.4" y="389" width="522.6" height="15.0" fill="rgb(212,30,48)" rx="2" ry="2" />
<text  x="670.42" y="399.5" >Thread-1`wait</text>
</g>
<g >
<title>MainThread`_call_with_frames_removed (23 samples, 0.04%)</title><rect x="432.3" y="181" width="0.4" height="15.0" fill="rgb(248,218,9)" rx="2" ry="2" />
<text  x="435.31" y="191.5" ></text>
</g>
<g >
<title>Thread-1`run (27,245 samples, 44.28%)</title><rect x="667.4" y="421" width="522.6" height="15.0" fill="rgb(246,186,27)" rx="2" ry="2" />
<text  x="670.42" y="431.5" >Thread-1`run</text>
</g>
<g >
<title>FlameGraph Thread`extract (9,058 samples, 14.72%)</title><rect x="81.5" y="373" width="173.7" height="15.0" fill="rgb(205,140,32)" rx="2" ry="2" />
<text  x="84.47" y="383.5" >FlameGraph Thread`extr..</text>
</g>
<g >
<title>MainThread`_find_and_load_unlocked (14 samples, 0.02%)</title><rect x="432.3" y="133" width="0.3" height="15.0" fill="rgb(246,101,15)" rx="2" ry="2" />
<text  x="435.31" y="143.5" ></text>
</g>
<g >
<title>MainThread`add_conn (773 samples, 1.26%)</title><rect x="435.4" y="325" width="14.8" height="15.0" fill="rgb(212,217,42)" rx="2" ry="2" />
<text  x="438.36" y="335.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load_unlocked (27 samples, 0.04%)</title><rect x="432.3" y="357" width="0.5" height="15.0" fill="rgb(209,143,52)" rx="2" ry="2" />
<text  x="435.31" y="367.5" ></text>
</g>
<g >
<title>MainThread`__init__ (272 samples, 0.44%)</title><rect x="445.0" y="293" width="5.2" height="15.0" fill="rgb(246,11,25)" rx="2" ry="2" />
<text  x="447.97" y="303.5" ></text>
</g>
<g >
<title>MainThread`add (15 samples, 0.02%)</title><rect x="640.0" y="309" width="0.3" height="15.0" fill="rgb(223,106,6)" rx="2" ry="2" />
<text  x="643.03" y="319.5" ></text>
</g>
<g >
<title>MainThread`&lt;module&gt; (7 samples, 0.01%)</title><rect x="432.4" y="69" width="0.1" height="15.0" fill="rgb(240,142,27)" rx="2" ry="2" />
<text  x="435.37" y="79.5" ></text>
</g>
<g >
<title>MainThread`_handle_fromlist (24 samples, 0.04%)</title><rect x="432.3" y="277" width="0.5" height="15.0" fill="rgb(241,154,17)" rx="2" ry="2" />
<text  x="435.31" y="287.5" ></text>
</g>
<g >
<title>MainThread`_call_with_frames_removed (8 samples, 0.01%)</title><rect x="432.6" y="53" width="0.1" height="15.0" fill="rgb(205,26,43)" rx="2" ry="2" />
<text  x="435.60" y="63.5" ></text>
</g>
<g >
<title>MainThread`_load_unlocked (27 samples, 0.04%)</title><rect x="432.3" y="341" width="0.5" height="15.0" fill="rgb(233,183,25)" rx="2" ry="2" />
<text  x="435.31" y="351.5" ></text>
</g>
<g >
<title>MainThread`_speciate (436 samples, 0.71%)</title><rect x="659.0" y="341" width="8.4" height="15.0" fill="rgb(207,108,31)" rx="2" ry="2" />
<text  x="662.02" y="351.5" ></text>
</g>
<g >
<title>MainThread`&lt;listcomp&gt; (10,515 samples, 17.09%)</title><rect x="450.5" y="341" width="201.7" height="15.0" fill="rgb(215,6,49)" rx="2" ry="2" />
<text  x="453.51" y="351.5" >MainThread`&lt;listcomp&gt;</text>
</g>
<g >
<title>FlameGraph Thread`create_flamegraph_entry (9,058 samples, 14.72%)</title><rect x="81.5" y="405" width="173.7" height="15.0" fill="rgb(253,25,5)" rx="2" ry="2" />
<text  x="84.47" y="415.5" >FlameGraph Thread`crea..</text>
</g>
<g >
<title>MainThread`__init__ (920 samples, 1.50%)</title><rect x="432.8" y="341" width="17.7" height="15.0" fill="rgb(241,84,14)" rx="2" ry="2" />
<text  x="435.83" y="351.5" ></text>
</g>
<g >
<title>Thread-1`_bootstrap_inner (27,245 samples, 44.28%)</title><rect x="667.4" y="437" width="522.6" height="15.0" fill="rgb(214,19,0)" rx="2" ry="2" />
<text  x="670.42" y="447.5" >Thread-1`_bootstrap_inner</text>
</g>
<g >
<title>Thread-1`wait (27,245 samples, 44.28%)</title><rect x="667.4" y="405" width="522.6" height="15.0" fill="rgb(253,128,25)" rx="2" ry="2" />
<text  x="670.42" y="415.5" >Thread-1`wait</text>
</g>
<g >
<title>MainThread`value (60 samples, 0.10%)</title><rect x="666.2" y="309" width="1.2" height="15.0" fill="rgb(222,13,33)" rx="2" ry="2" />
<text  x="669.23" y="319.5" ></text>
</g>
<g >
<title>FlameGraph Thread`extract_stack (9,058 samples, 14.72%)</title><rect x="81.5" y="389" width="173.7" height="15.0" fill="rgb(210,180,24)" rx="2" ry="2" />
<text  x="84.47" y="399.5" >FlameGraph Thread`extr..</text>
</g>
<g >
<title>MainThread`_call_with_frames_removed (27 samples, 0.04%)</title><rect x="432.3" y="309" width="0.5" height="15.0" fill="rgb(223,185,47)" rx="2" ry="2" />
<text  x="435.31" y="319.5" ></text>
</g>
<g >
<title>MainThread`_load_unlocked (8 samples, 0.01%)</title><rect x="432.6" y="85" width="0.1" height="15.0" fill="rgb(226,105,15)" rx="2" ry="2" />
<text  x="435.60" y="95.5" ></text>
</g>
<g >
<title>MainThread`_load_unlocked (11 samples, 0.02%)</title><rect x="432.4" y="117" width="0.2" height="15.0" fill="rgb(217,198,14)" rx="2" ry="2" />
<text  x="435.37" y="127.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load_unlocked (9 samples, 0.01%)</title><rect x="432.6" y="101" width="0.1" height="15.0" fill="rgb(220,91,43)" rx="2" ry="2" />
<text  x="435.58" y="111.5" ></text>
</g>
<g >
<title>MainThread`speciate (436 samples, 0.71%)</title><rect x="659.0" y="357" width="8.4" height="15.0" fill="rgb(217,19,35)" rx="2" ry="2" />
<text  x="662.02" y="367.5" ></text>
</g>
<g >
<title>MainThread`_run_code (12,258 samples, 19.92%)</title><rect x="432.3" y="437" width="235.1" height="15.0" fill="rgb(226,49,37)" rx="2" ry="2" />
<text  x="435.31" y="447.5" >MainThread`_run_code</text>
</g>
<g >
<title>MainThread`__init__ (107 samples, 0.17%)</title><rect x="656.7" y="293" width="2.0" height="15.0" fill="rgb(246,80,27)" rx="2" ry="2" />
<text  x="659.68" y="303.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load (14 samples, 0.02%)</title><rect x="432.3" y="149" width="0.3" height="15.0" fill="rgb(247,93,26)" rx="2" ry="2" />
<text  x="435.31" y="159.5" ></text>
</g>
<g >
<title>MainThread`__init__ (28 samples, 0.05%)</title><rect x="658.2" y="277" width="0.5" height="15.0" fill="rgb(238,9,51)" rx="2" ry="2" />
<text  x="661.19" y="287.5" ></text>
</g>
<g >
<title>FlameGraph Thread`run (14,067 samples, 22.86%)</title><rect x="81.5" y="421" width="269.8" height="15.0" fill="rgb(211,168,43)" rx="2" ry="2" />
<text  x="84.47" y="431.5" >FlameGraph Thread`run</text>
</g>
<g >
<title>MainThread`_load_unlocked (24 samples, 0.04%)</title><rect x="432.3" y="213" width="0.5" height="15.0" fill="rgb(253,132,1)" rx="2" ry="2" />
<text  x="435.31" y="223.5" ></text>
</g>
<g >
<title>MainThread`&lt;module&gt; (23 samples, 0.04%)</title><rect x="432.3" y="165" width="0.4" height="15.0" fill="rgb(236,22,42)" rx="2" ry="2" />
<text  x="435.31" y="175.5" ></text>
</g>
<g >
<title>MainThread`&lt;module&gt; (8 samples, 0.01%)</title><rect x="432.6" y="37" width="0.1" height="15.0" fill="rgb(245,1,0)" rx="2" ry="2" />
<text  x="435.60" y="47.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load_unlocked (24 samples, 0.04%)</title><rect x="432.3" y="229" width="0.5" height="15.0" fill="rgb(251,19,22)" rx="2" ry="2" />
<text  x="435.31" y="239.5" ></text>
</g>
<g >
<title>MainThread`__hash__ (95 samples, 0.15%)</title><rect x="650.4" y="277" width="1.8" height="15.0" fill="rgb(222,107,29)" rx="2" ry="2" />
<text  x="653.37" y="287.5" ></text>
</g>
<g >
<title>MainThread`exec_module (8 samples, 0.01%)</title><rect x="432.6" y="69" width="0.1" height="15.0" fill="rgb(242,204,34)" rx="2" ry="2" />
<text  x="435.60" y="79.5" ></text>
</g>
<g >
<title>MainThread`feed_forward (10,515 samples, 17.09%)</title><rect x="450.5" y="325" width="201.7" height="15.0" fill="rgb(216,106,32)" rx="2" ry="2" />
<text  x="453.51" y="335.5" >MainThread`feed_forward</text>
</g>
<g >
<title>MainThread`main (12,229 samples, 19.88%)</title><rect x="432.8" y="373" width="234.6" height="15.0" fill="rgb(236,178,17)" rx="2" ry="2" />
<text  x="435.83" y="383.5" >MainThread`main</text>
</g>
<g >
<title>MainThread`__eq__ (4,167 samples, 6.77%)</title><rect x="351.3" y="437" width="79.9" height="15.0" fill="rgb(236,216,39)" rx="2" ry="2" />
<text  x="354.27" y="447.5" >MainThrea..</text>
</g>
<g >
<title>MainThread`distance (355 samples, 0.58%)</title><rect x="659.1" y="325" width="6.8" height="15.0" fill="rgb(249,29,5)" rx="2" ry="2" />
<text  x="662.06" y="335.5" ></text>
</g>
<g >
<title>MainThread`_call_with_frames_removed (24 samples, 0.04%)</title><rect x="432.3" y="261" width="0.5" height="15.0" fill="rgb(213,225,6)" rx="2" ry="2" />
<text  x="435.31" y="271.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load (24 samples, 0.04%)</title><rect x="432.3" y="245" width="0.5" height="15.0" fill="rgb(210,15,53)" rx="2" ry="2" />
<text  x="435.31" y="255.5" ></text>
</g>
<g >
<title>FlameGraph Thread`checkcache (9,056 samples, 14.72%)</title><rect x="81.5" y="357" width="173.7" height="15.0" fill="rgb(211,162,51)" rx="2" ry="2" />
<text  x="84.47" y="367.5" >FlameGraph Thread`chec..</text>
</g>
<g >
<title>MainThread`&lt;module&gt; (12,257 samples, 19.92%)</title><rect x="432.3" y="389" width="235.1" height="15.0" fill="rgb(254,115,29)" rx="2" ry="2" />
<text  x="435.31" y="399.5" >MainThread`&lt;module&gt;</text>
</g>
<g >
<title>MainThread`_call_with_frames_removed (9 samples, 0.01%)</title><rect x="432.6" y="133" width="0.1" height="15.0" fill="rgb(249,143,52)" rx="2" ry="2" />
<text  x="435.58" y="143.5" ></text>
</g>
<g >
<title>MainThread`__init__ (13 samples, 0.02%)</title><rect x="450.2" y="309" width="0.3" height="15.0" fill="rgb(226,86,45)" rx="2" ry="2" />
<text  x="453.22" y="319.5" ></text>
</g>
<g >
<title>MainThread`crossover (206 samples, 0.33%)</title><rect x="654.8" y="325" width="3.9" height="15.0" fill="rgb(234,40,2)" rx="2" ry="2" />
<text  x="657.78" y="335.5" ></text>
</g>
<g >
<title>MainThread`reproduce (221 samples, 0.36%)</title><rect x="654.8" y="357" width="4.2" height="15.0" fill="rgb(229,5,3)" rx="2" ry="2" />
<text  x="657.78" y="367.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load (9 samples, 0.01%)</title><rect x="432.6" y="117" width="0.1" height="15.0" fill="rgb(254,191,43)" rx="2" ry="2" />
<text  x="435.58" y="127.5" ></text>
</g>
<g >
<title>MainThread`_find_and_load_unlocked (6 samples, 0.01%)</title><rect x="432.4" y="37" width="0.1" height="15.0" fill="rgb(219,159,23)" rx="2" ry="2" />
<text  x="435.38" y="47.5" ></text>
</g>
<g >
<title>MainThread`__init__ (651 samples, 1.06%)</title><rect x="437.7" y="309" width="12.5" height="15.0" fill="rgb(232,67,1)" rx="2" ry="2" />
<text  x="440.70" y="319.5" ></text>
</g>
<g >
<title>MainThread`exec_module (11 samples, 0.02%)</title><rect x="432.4" y="101" width="0.2" height="15.0" fill="rgb(254,178,50)" rx="2" ry="2" />
<text  x="435.37" y="111.5" ></text>
</g>
</g>
</svg>
